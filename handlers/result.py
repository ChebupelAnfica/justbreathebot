from aiogram import F, types
from aiogram.types import InputMediaPhoto

import keyboards
from loader import dp, bot
import logging
from aiogram.fsm.context import FSMContext

text_about = f'''–û –∫–ª—É–±–µ –∏ –µ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö 

–ö–ª—É–± - —ç—Ç–æ —Ç–æ —Å–∞–º–æ–µ –º–µ—Å—Ç–æ, –≥–¥–µ –ª—é–¥–∏ —Å–æ –≤—Å–µ–≥–æ –º–∏—Ä–∞ –ø–æ–ª—É—á–∞—é—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç >>> –ø–æ–¥—Ç—è–Ω—É—Ç–æ–µ, –≥–∏–±–∫–æ–µ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Ç–µ–ª–æ, —É–π–º—É —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏—è –∏ –∫–∞–π—Ñ–∞ –≤–æ –≤—Ä–µ–º—è –∏ –ø–æ—Å–ª–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫.

–í—Å–µ–≥–æ –∑–∞ 35-40 –º–∏–Ω—É—Ç –≤ –¥–µ–Ω—å –º—ã —É–ª—É—á—à–∞–µ–º –æ—Å–∞–Ω–∫—É, —É–±–∏—Ä–∞–µ–º –≤—ã–ø–∏—Ä–∞—é—â–∏–π –∂–∏–≤–æ—Ç, –æ–∫—Ä—É–≥–ª—è–µ–º —è–≥–æ–¥–∏—Ü—ã –∏ –ø–æ–≤—ã—à–∞–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ‚ú®

‚ñ´Ô∏è–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è
‚ñ´Ô∏è–≤ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã –±–æ–ª–µ–µ 70 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ 
‚ñ´Ô∏è–Ω–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤—ã—Ö–æ–¥—è—Ç 3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é 
‚ñ´Ô∏è–æ—Ç –º–µ–Ω—è —Ç—ã –ø–æ–ª—É—á–∏—à—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–æ –ª—é–±—ã–º –≤–æ–ø—Ä–æ—Å–∞–º 
‚ñ´Ô∏è—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é 
üíî–±–æ–Ω—É—Å—ã –∫–æ—Ä–æ—Ç–∫–∏–µ –∑–∞—Ä—è–¥–∫–∏ –æ—Ç –∑–∞–∂–∏–º–æ–≤ –∏ –æ—Ç–µ–∫–æ–≤ –≤ —Ç–µ–ª–µ, –≤–µ–±–∏–Ω–∞—Ä—ã –æ—Ç –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∞, –ø—Å–∏—Ö–æ–ª–æ–≥–∞, –∫–Ω–∏–≥–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤

–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª—É–±–∞:

üåø–í –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ —Ç–µ–±—è –∂–¥—ë—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –¥–ª—è –ø—Ä–æ–∫–∞—á–∫–∏ —è–≥–æ–¥–∏—Ü, –º—ã—à—Ü –ø—Ä–µ—Å—Å–∞, –∏ —É–ª—É—á—à–µ–Ω–∏—è –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç–∏ –≤—Å–µ–≥–æ —Ç–µ–ª–∞ 

üåø–í —Å—Ä–µ–¥—É —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è –º—ã—à—Ü –∂–∏–≤–æ—Ç–∞, —É–ª—É—á—à–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥—ã—Ö–∞–Ω–∏—è, —Ä–∞–±–æ—Ç–∞–µ–º —Å –ø–æ–¥–≤–∏–∂–Ω–æ—Å—Ç—å—é –ø–æ–∑–≤–æ–Ω–æ—á–Ω–∏–∫–∞, –º—ã—à—Ü–∞–º–∏ —Ç–∞–∑–æ–≤–æ–≥–æ –¥–Ω–∞

üåø–í –ø—è—Ç–Ω–∏—Ü—É —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –Ω–∞ –æ—Å–∞–Ω–∫—É, –≥–¥–µ —É–¥–µ–ª—è–µ–º –≤–Ω–∏–º–∞–Ω–∏–µ —Å–ø–∏–Ω–µ, –ø–ª–µ—á–∞–º, –ª–æ–ø–∞—Ç–∫–∞–º –∏ –º—ã—à—Ü–∞–º–∏ –∂–∏–≤–æ—Ç–∞ 

–í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—é –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –≤ —Ç–µ–ª–µ –∏ —Ä–∞–∑–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏: —Å–∏–ª–æ–≤–∞—è, —Ä–∞—Å—Ç—è–∂–∫–∞, –π–æ–≥–∞, –ø–∏–ª–∞—Ç–µ—Å, –º—Ñ—Ä, —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ

*–ü—Ä–æ–±–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ
*–ï–∂–µ–º–µ—Å—è—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞üëáüèª

üåø–í—ã–±–µ—Ä–∏ —Ç–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω 

‚ñ´Ô∏è1 –º–µ—Å—è—Ü 130BYN/40$
‚ñ´Ô∏è3 –º–µ—Å—è—Ü–∞ 275 BYN/85$
‚ñ´Ô∏è6 –º–µ—Å—è—Ü–µ–≤ 535 BYN/165$

–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—Éüëáüèª'''

photo_id1 = "AgACAgIAAxkBAAMvZft4ybXIbZEYaWGyb90TMOOPQlUAAqTbMRuSO9lLJWZct9-uDZQBAAMCAANzAAM0BA"
photo_id2 = "AgACAgIAAxkBAAMxZft42D94GdoXMeRzlcKxVAH4WKoAAqPbMRuSO9lLrpm0V_MAAQmTAQADAgADcwADNAQ"
photo_id3 = "AgACAgIAAxkBAAMzZft46WfVJ1aIBybo-hjLMi1KkLUAAqLbMRuSO9lLELVivGmKyvIBAAMCAANzAAM0BA"
photo_id4 = "AgACAgIAAxkBAAM1Zft49lj2wfAzH727RFKBAjTmEV0AAqHbMRuSO9lLqHrF82zZAAHqAQADAgADcwADNAQ"
photo_id5 = "AgACAgIAAxkBAAM3Zft5BGwAAXvh4bOQ1fiydlKK9FVwAAKg2zEbkjvZSxRvyKNaRExcAQADAgADcwADNAQ"


@dp.message(F.text == "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã")
async def reviews(message: types.Message):
    media = [
        InputMediaPhoto(media=photo_id1),
        InputMediaPhoto(media=photo_id2),
        InputMediaPhoto(media=photo_id3),
        InputMediaPhoto(media=photo_id4),
        InputMediaPhoto(media=photo_id5)
    ]
    try:
        await bot.delete_message(message.from_user.id, message.message_id)
    except Exception as ex:
        logging.error(ex)
        pass
    try:
        await bot.send_media_group(message.chat.id, media)
    except Exception as ex:
        logging.error(ex)
        pass
    try:
        await bot.send_message(message.chat.id,
                               text="''–¢–∞–∫ –∂–µ –µ—Å–ª–∏ –≤–ø–µ—á–µ—Ç–ª–µ–Ω—ã –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–∞–π –∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏—Å–æ–µ–¥–∏—Ç—å—Å—è –∫ –Ω–∞–º‚§µÔ∏è''",
                               reply_markup=keyboards.inline.result.connection)
    except Exception as ex:
        logging.error(ex)
        pass


@dp.callback_query(F.data == 'connection')
async def process_callback1(call: types.CallbackQuery, state: FSMContext):
    await state.clear()
    try:
        await bot.answer_callback_query(call.id)
    except Exception as ex:
        logging.error(ex)
        pass
    try:
        if call.message:
            await bot.edit_message_text(
                text_about,
                chat_id=call.from_user.id,
                message_id=call.message.message_id,
                reply_markup=keyboards.inline.pay.pay
            )
    except Exception as ex:
        logging.error(ex)
        pass
